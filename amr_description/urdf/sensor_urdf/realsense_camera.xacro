<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    
    <!--==== REALSENSE CAMREA ====-->
    <xacro:property name = 'realsense_length' value = '0.02505'/>
    <xacro:property name = 'realsense_weight' value = '0.089915'/>
    <xacro:property name = 'realsense_height' value = '0.025'/>
    <xacro:property name = 'realsense_mass' value = '0.25'/>
    <xacro:property name = 'front_realsense_dx' value = '0.19519314'/>
    <xacro:property name = 'front_realsense_dy' value = '0.0'/>
    <xacro:property name = 'front_realsense_dz' value = '0.5119453'/>
    <xacro:property name = 'back_realsense_dx' value = '-0.27410008053'/>
    <xacro:property name = 'back_realsense_dy' value = '0.0'/>
    <xacro:property name = 'back_realsense_dz' value = '0.156982105'/>

    <xacro:property name="front_camera" value="front_camera"/>
    <xacro:property name="back_camera" value="back_camera"/>

    <xacro:arg name="use_nominal_extrinsics" default="true" />
    <xacro:include filename="$(find realsense2_description)/urdf/_d435i.urdf.xacro"/>
    <xacro:property name="M_PI" value="3.1415926535897931" />


    <!--==== FRONT REALSENSE ====-->
    <xacro:sensor_d435i parent="base_link" name="${front_camera}" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
        <origin xyz="${front_realsense_dx} ${front_realsense_dy} ${front_realsense_dz}" rpy="0 0 0"/>
    </xacro:sensor_d435i>

    <!-- Virtual depth camera sensor -->
    <gazebo reference="${front_camera}_depth_frame">
        <sensor name="front_depth_camera" type="depth">
            <alwaysOn>1</alwaysOn>
            <update_rate>30</update_rate>
            <camera name="depth_camera">
                <image>
                    <width>640</width>
                    <height>480</height>       
                </image>
            </camera>
            <plugin name="front_depth_camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                    <!-- 
                        <argument>custom_camera/image_raw:=custom_camera/custom_image</argument>
                        <argument>custom_camera/image_depth:=custom_camera/custom_image_depth</argument>
                        <argument>custom_camera/camera_info:=custom_camera/custom_info_raw</argument>
                        <argument>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</argument>
                        <argument>custom_camera/points:=custom_camera/custom_points</argument> 
                    -->
                </ros>
                <update_rate>30</update_rate>
                <cameraName>front_camera_depth_frame</cameraName>
                <frameName>${front_camera}_depth_optical_frame</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.00000001</distortionK1>
                <distortionK2>0.00000001</distortionK2>
                <distortionK3>0.00000001</distortionK3>
                <distortionT1>0.00000001</distortionT1>
                <distortionT2>0.00000001</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Virtual RGB camera sensor -->
    <gazebo reference="${front_camera}_color_frame">
        <sensor name="front_rgb_camera" type="camera">
            <pose>0.0 0.0 0.0 0 0 0</pose>
            <camera name="rgb_camera">
                <horizontal_fov>1.047</horizontal_fov>
                <image>
                    <width>1280</width>
                    <height>720</height>
                    <format>RGB_INT8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <alwaysOn>1</alwaysOn>
            <update_rate>30</update_rate>
            <visualize>0</visualize>
            <plugin name="front_rgb_camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                    
                        <!-- <namespace>camera</namespace>
                        <argument>image_raw:=color/image_raw</argument>
                        <argument>camera_info:=color/camera_info</argument>  -->
                    
                </ros>
                <cameraName>front_camera_color_frame</cameraName>
                <frameName>${front_camera}_color_optical_frame</frameName>
                <hackBaseline>0.07</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>


    <!--==== BACK REALSENSE CAMERA ====-->
    <xacro:sensor_d435i parent="base_link" name="${back_camera}" use_nominal_extrinsics="$(arg use_nominal_extrinsics)">
        <origin xyz="${back_realsense_dx} ${back_realsense_dy} ${back_realsense_dz}" rpy="0 0 ${pi}"/>
    </xacro:sensor_d435i>

    <!-- Virtual depth camera sensor -->
    <gazebo reference="${back_camera}_depth_frame">
        <sensor name="back_depth_camera" type="depth">
            <alwaysOn>1</alwaysOn>
            <update_rate>30</update_rate>
            <camera name="depth_camera">
                <image>
                    <width>640</width>
                    <height>480</height>       
                </image>
            </camera>
            <plugin name="back_depth_camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                    <!-- 
                        <argument>custom_camera/image_raw:=custom_camera/custom_image</argument>
                        <argument>custom_camera/image_depth:=custom_camera/custom_image_depth</argument>
                        <argument>custom_camera/camera_info:=custom_camera/custom_info_raw</argument>
                        <argument>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</argument>
                        <argument>custom_camera/points:=custom_camera/custom_points</argument> 
                    -->
                </ros>
                <update_rate>30</update_rate>
                <cameraName>${back_camera}_depth_frame</cameraName>
                <frameName>${back_camera}_depth_optical_frame</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.00000001</distortionK1>
                <distortionK2>0.00000001</distortionK2>
                <distortionK3>0.00000001</distortionK3>
                <distortionT1>0.00000001</distortionT1>
                <distortionT2>0.00000001</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- Virtual RGB camera sensor -->
    <gazebo reference="${back_camera}_color_frame">
        <sensor name="back_rgb_camera" type="camera">
            <pose>0.0 0.0 0.0 0 0 0</pose>
            <camera name="rgb_camera">
                <horizontal_fov>1.047</horizontal_fov>
                <image>
                    <width>1280</width>
                    <height>720</height>
                    <format>RGB_INT8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <alwaysOn>1</alwaysOn>
            <update_rate>30</update_rate>
            <visualize>0</visualize>
            <plugin name="back_rgb_camera_driver" filename="libgazebo_ros_camera.so">
                <ros>
                    
                        <!-- <namespace>camera</namespace>
                        <argument>image_raw:=color/image_raw</argument>
                        <argument>camera_info:=color/camera_info</argument>  -->
                    
                </ros>
                <cameraName>${back_camera}_color_frame</cameraName>
                <frameName>${back_camera}_color_optical_frame</frameName>
                <hackBaseline>0.07</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>
    
</robot>